[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[tool.flit.module]
name = "aiida_cp2k"

[project]
name = "aiida-cp2k"
dynamic = ["version", "description"]
readme = "README.md"
license = {file = 'LICENSE.txt'}
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Framework :: AiiDA",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS :: MacOS X",
    "Programming Language :: Python :: 3",
]
requires-python = ">=3.8"
dependencies = [
    "aiida-core>=2.0.0,<3.0.0",
    "aiida-gaussian-datatypes",
    "ase",
    "ruamel.yaml>=0.16.5",
    "cp2k-output-tools",
]

[[project.authors]]
name = "The AiiDA team"

[project.urls]
Homepage = "https://github.com/aiidateam/aiida-cp2k"

[project.optional-dependencies]
dev = [
    "bumpver==2022.1119",
    "pgtest~=1.3",
    "pytest~=6.0",
    "pytest-cov~=2.11.1",
    "coverage",
    "pre-commit~=2.19",
]
docs = [
    "sphinx",
    "sphinx-rtd-theme",
    "sphinxcontrib-contentui",
    "sphinxcontrib-details-directive",
]

[project.entry-points."aiida.calculations"]
cp2k = "aiida_cp2k.calculations:Cp2kCalculation"

[project.entry-points."aiida.parsers"]
cp2k_base_parser = "aiida_cp2k.parsers:Cp2kBaseParser"
cp2k_advanced_parser = "aiida_cp2k.parsers:Cp2kAdvancedParser"
cp2k_tools_parser = "aiida_cp2k.parsers:Cp2kToolsParser"

[project.entry-points."aiida.workflows"]
"cp2k.base" = "aiida_cp2k.workchains:Cp2kBaseWorkChain"

[tool.pytest.ini_options]
python_files = "test_*.py example_*.py"
python_functions = "example_* test_*"
filterwarnings = [
    "ignore::DeprecationWarning:aiida:",
    "ignore::DeprecationWarning:plumpy:",
    "ignore::DeprecationWarning:django:",
    "ignore::DeprecationWarning:frozendict:",
    "ignore::DeprecationWarning:sqlalchemy:",
    "ignore::DeprecationWarning:yaml:",
    "ignore::DeprecationWarning:pymatgen:",
]

[tool.bumpver]
current_version = "v2.0.0b0"
version_pattern = "vMAJOR.MINOR.PATCH[PYTAGNUM]"
commit_message = "Bump version {old_version} -> {new_version}."
commit = true
tag = true
push = true

[tool.bumpver.file_patterns]
"aiida_cp2k/__init__.py" = [
    '__version__ = "{pep440_version}"',
]
